pipeline {
    agent any

    environment {
        AWS_REGION = "us-east-1"
        INSTANCE_ID = "i-0dec7ae1549dba4a1"  // Replace with your EC2 instance ID
        DISCORD_WEBHOOK_URL = "https://discord.com/api/webhooks/1315554436285726740/B0Wb36cKUF8o236R6xljUF_3cSG7VTcKbYAOWocEkQcHgB8zFx6Zvxbq_1zY4P8HZTwI"  // Replace with your Discord webhook URL
        AWS_CREDENTIALS_ID = 'aws-credentials' // Replace with your AWS credentials ID
    }

    triggers {
        cron('59 8 * * *')  // Trigger at 08:38 UTC (14:38 BGT) for stopping EC2 instance
    }

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    // Install necessary dependencies and create a virtual environment
                    sh '''#!/bin/bash
                        sudo apt update && sudo apt install -y python3.12-venv
                        python3 -m venv venv
                        source venv/bin/activate
                        pip install -r requirements.txt
                    '''
                }
            }
        }

        stage('Stop EC2 Instance') {
            steps {
                script {
                    // Using AWS credentials securely
                    withCredentials([aws(credentialsId: AWS_CREDENTIALS_ID, accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        echo "Stopping EC2 Instance: ${INSTANCE_ID}..."
                        sh '''#!/bin/bash
                            source venv/bin/activate
                            python3 ec2_notifier.py stop
                        '''
                        sendDiscordNotification("ðŸ›‘ EC2 instance ${INSTANCE_ID} has stopped.")
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed for stopping EC2 instance."
        }
    }
}

def sendDiscordNotification(message) {
    echo "Sending Discord notification..."
    def response = sh(script: """
        curl -X POST -H "Content-Type: application/json" -d '{"content": "${message}"}' ${DISCORD_WEBHOOK_URL}
    """, returnStatus: true)
    
    if (response != 0) {
        echo "Failed to send Discord notification."
    } else {
        echo "Discord notification sent successfully."
    }
}
